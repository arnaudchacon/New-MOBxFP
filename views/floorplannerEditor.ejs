<!DOCTYPE html>
<html>
<head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport" />
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f3f4f6;
        }

        #fp-editor-container {
            width: 90vw;  /* Adjust this value for the desired width */
            height: 90vh; /* Adjust this value for the desired height */
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            border-radius: 10px;
        }

        #error-message {
            color: red;
        }
    </style>
</head>
<body>
    <div id="fp-editor-container"></div>
    <p id="error-message"></p>
    <script data-floorplanner-editor src="https://fp-editor-cdn.floorplanner.com/embed.js" crossorigin="anonymous"></script>
    
    <script type="text/javascript">
        const setError = message => {
            document.getElementById('error-message').innerText = message;
        };

        // Dynamically get the Project ID and Project Token from the URL's query parameter
        const urlParams = new URLSearchParams(window.location.search);
        const PROJECT_ID = urlParams.get('projectId');
        const PROJECT_TOKEN = urlParams.get('projectToken');

        if (!PROJECT_ID || !PROJECT_TOKEN) {
            setError('Project ID or Project Token not found.');
            throw new Error('Project ID or Project Token not found.');
        }

        // Initialize the editor using the updated configuration
        initFPEditor({
            projectId: PROJECT_ID,
            mountSelector: '#fp-editor-container',
            user: {
                permissions: ['save', 'export', 'hd', 'ntl'],
            },
            projectAccessToken: PROJECT_TOKEN,
            language: 'en-US',
        })
        .then(api => {
            window.api = api;
        })
        .catch(error => {
            setError(error.message);
            console.error('Error initializing Floorplanner editor:', error);
        });
    </script>
</body>
</html>
